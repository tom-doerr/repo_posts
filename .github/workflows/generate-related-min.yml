name: Generate Related Data (min)

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'tools/**'
  workflow_dispatch: {}

concurrency:
  group: related-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Start timer
        run: echo "START=$EPOCHSECONDS" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install --index-url https://download.pytorch.org/whl/cpu 'torch==2.5.1'
          pip install 'sentence-transformers==2.7.0'
          pip install 'pillow==10.4.0'
      - name: Generate related data (full on dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          RELATED_MODE=emb python tools/generate_related.py
          python tools/generate_search_index.py
          python tools/generate_image_dims.py
          python tools/export_embeddings_bin.py
      - name: Generate related data (only missing on push)
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          RELATED_MODE=emb RELATED_ONLY_MISSING=1 python tools/generate_related.py
          python tools/generate_search_index.py
          python tools/generate_image_dims.py
          python tools/export_embeddings_bin.py
      - name: Write status.json (counts)
        run: |
          python -c "import os,re,json,glob,numpy as np;posts=len(glob.glob('docs/_posts/*.md'));p='docs/_data/related.json';rel=json.loads(open(p,'r',encoding='utf-8').read()) if os.path.exists(p) else {};non=sum(1 for v in rel.values() if v);idx='docs/assets/search-index.json';idxn=(len(json.load(open(idx,'r',encoding='utf-8'))) if os.path.exists(idx) else 0);emb_p='docs/_data/embeddings.npz';emb_n=(len(np.load(emb_p)['slugs']) if os.path.exists(emb_p) else 0);
          # images
          img_pat=re.compile(r'^image:\\s*(.+)$',re.M);imgs=[img_pat.search(open(f,'r',encoding='utf-8',errors='ignore').read()) for f in glob.glob('docs/_posts/*.md')];imgs=[m.group(1).strip().strip('\"\'') for m in imgs if m];dims_p='docs/_data/image_dims.json';with_dims=(len(json.load(open(dims_p,'r',encoding='utf-8'))) if os.path.exists(dims_p) else 0);
          # semantic client assets
          f32='docs/assets/embeddings.f32'; meta='docs/assets/embeddings.meta.json'; f32sz=(os.path.getsize(f32) if os.path.exists(f32) else 0); sem_assets=bool(f32sz and os.path.exists(meta));
          status={'posts':posts,'related_keys':len(rel),'nonempty':non,'missing':max(posts-len(rel),0),'related_renderable':non,
          'embeddings_count':emb_n,'embeddings_size_bytes':(os.path.getsize(emb_p) if os.path.exists(emb_p) else 0),'embeddings_model':'sentence-transformers/all-MiniLM-L6-v2','embeddings_dim':384,
          'search_index_entries':idxn,'search_index_size_bytes':(os.path.getsize(idx) if os.path.exists(idx) else 0),
          'images_total':len(imgs),'images_with_dims':with_dims,
          'embeddings_f32_size_bytes':f32sz,'sem_assets':sem_assets};
          os.makedirs('docs/_data',exist_ok=True);json.dump(status,open('docs/_data/status.json','w',encoding='utf-8'),ensure_ascii=False,separators=(',',':'))"
      - name: Commit artifacts
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'ci: update related artifacts'
          file_pattern: 'docs/_data/* docs/assets/search-index.json'
          push_options: '--force-with-lease'
      - name: Job runtime
        if: always()
        run: echo "Job runtime: $(( (EPOCHSECONDS-START+59)/60 )) min" >> $GITHUB_STEP_SUMMARY
